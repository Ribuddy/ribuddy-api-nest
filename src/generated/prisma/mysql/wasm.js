
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  nickname: 'nickname',
  profileImage: 'profileImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OAuthUserScalarFieldEnum = {
  oauthProvider: 'oauthProvider',
  oauthId: 'oauthId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  teamId: 'teamId',
  userId: 'userId',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RidingRecordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  teamId: 'teamId',
  distance: 'distance',
  duration: 'duration',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.S3UploadedFilesScalarFieldEnum = {
  id: 'id',
  domain: 'domain',
  kind: 'kind',
  key: 'key',
  url: 'url',
  mimeType: 'mimeType',
  size: 'size',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  nickname: 'nickname',
  profileImage: 'profileImage'
};

exports.Prisma.OAuthUserOrderByRelevanceFieldEnum = {
  oauthProvider: 'oauthProvider',
  oauthId: 'oauthId'
};

exports.Prisma.TeamOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.TeamMemberOrderByRelevanceFieldEnum = {
  role: 'role'
};

exports.Prisma.RefreshTokenOrderByRelevanceFieldEnum = {
  token: 'token'
};

exports.Prisma.S3UploadedFilesOrderByRelevanceFieldEnum = {
  domain: 'domain',
  kind: 'kind',
  key: 'key',
  url: 'url',
  mimeType: 'mimeType'
};


exports.Prisma.ModelName = {
  User: 'User',
  OAuthUser: 'OAuthUser',
  Team: 'Team',
  TeamMember: 'TeamMember',
  RidingRecord: 'RidingRecord',
  RefreshToken: 'RefreshToken',
  S3UploadedFiles: 'S3UploadedFiles'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/haneul/GitHub/Projects/capstone/ribuddy-api-nest/src/generated/prisma/mysql",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "darwin"
      },
      {
        "fromEnvVar": null,
        "value": "darwin-arm64"
      },
      {
        "fromEnvVar": null,
        "value": "linux-arm64-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "windows"
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/haneul/GitHub/Projects/capstone/ribuddy-api-nest/prisma/mysql/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../../.env",
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma/mysql",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL_MYSQL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../../src/generated/prisma/mysql\"\n  binaryTargets = [\"native\", \"darwin\", \"darwin-arm64\", \"linux-arm64-openssl-3.0.x\", \"linux-musl-openssl-3.0.x\", \"windows\", \"debian-openssl-1.1.x\"]\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL_MYSQL\")\n}\n\nmodel User {\n  id           BigInt   @id @default(autoincrement())\n  name         String   @db.VarChar(128)\n  nickname     String   @db.VarChar(128)\n  // gender        String   @db.VarChar(10)\n  // birthdate     DateTime @db.Date\n  profileImage String?  @map(\"profile_image\") @db.VarChar(512)\n  // phoneNumber   String?  @map(\"phone_number\") @db.VarChar(15)\n  createdAt    DateTime @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt    DateTime @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  OAuthUser OAuthUser[]\n\n  @@map(\"user\")\n}\n\nmodel OAuthUser {\n  oauthProvider String   @map(\"oauth_provider\") @db.VarChar(30)\n  oauthId       String   @map(\"oauth_id\") @db.VarChar(100)\n  userId        BigInt   @map(\"user_id\")\n  createdAt     DateTime @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt     DateTime @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)\n\n  @@id([oauthProvider, oauthId])\n  @@map(\"oauth_user\")\n}\n\nmodel Team {\n  id        BigInt   @id @default(autoincrement())\n  name      String   @db.VarChar(20)\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  @@map(\"team\")\n}\n\nmodel TeamMember {\n  teamId    BigInt   @map(\"team_id\")\n  userId    BigInt   @map(\"user_id\")\n  role      String   @db.VarChar(20)\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  @@id([teamId, userId])\n  @@index([teamId], name: \"idx_team_id\")\n  @@index([userId], name: \"idx_user_id\")\n  @@map(\"team_member\")\n}\n\nmodel RidingRecord {\n  id          BigInt               @id @default(autoincrement())\n  userId      BigInt?              @map(\"user_id\")\n  teamId      BigInt?              @map(\"team_id\")\n  distance    Float\n  duration    Int\n  startPos    Unsupported(\"POINT\") @map(\"start_pos\")\n  stopOverPos Unsupported(\"POINT\") @map(\"stop_over_pos\")\n  endPos      Unsupported(\"POINT\") @map(\"end_pos\")\n  createdAt   DateTime             @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt   DateTime             @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  @@index([userId], name: \"idx_user_id\")\n  @@map(\"riding_record\")\n}\n\nmodel RefreshToken {\n  id        BigInt   @id @default(autoincrement())\n  userId    BigInt   @unique @map(\"user_id\")\n  token     String   @db.VarChar(255)\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  @@index([userId], name: \"idx_user_id\")\n  @@map(\"refresh_token\")\n}\n\nmodel S3UploadedFiles {\n  id        BigInt   @id @default(autoincrement())\n  domain    String   @db.VarChar(50) // 업로드된 파일이 속한 도메인 (예: 'events', 'community')\n  kind      String   @db.VarChar(20) // 파일 종류: 'image' | 'video'\n  key       String   @unique @db.VarChar(500) // S3 object key\n  url       String   @db.VarChar(1024) // CDN 공개 URL\n  mimeType  String   @map(\"mime_type\") @db.VarChar(100) // ex. image/jpeg\n  size      Int? // 파일 크기 (byte 단위)\n  createdAt DateTime @default(now()) @map(\"created_at\") @db.Timestamp(6)\n  updatedAt DateTime @default(now()) @map(\"updated_at\") @db.Timestamp(6)\n\n  @@map(\"s3_uploaded_files\")\n}\n",
  "inlineSchemaHash": "f186090c198a427ddb9dc1bb46dca7a8394a45ddc6241ff45b60a0d50715c39e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nickname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"OAuthUser\",\"kind\":\"object\",\"type\":\"OAuthUser\",\"relationName\":\"OAuthUserToUser\"}],\"dbName\":\"user\"},\"OAuthUser\":{\"fields\":[{\"name\":\"oauthProvider\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"oauth_provider\"},{\"name\":\"oauthId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"oauth_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OAuthUserToUser\"}],\"dbName\":\"oauth_user\"},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"team\"},\"TeamMember\":{\"fields\":[{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"team_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"team_member\"},\"RidingRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"team_id\"},{\"name\":\"distance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"riding_record\"},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"refresh_token\"},\"S3UploadedFiles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"domain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mime_type\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"s3_uploaded_files\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL_MYSQL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL_MYSQL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL_MYSQL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

